[{"C:\\Users\\TSecret\\Desktop\\TypeScript App\\faceit-stats\\src\\index.tsx":"1","C:\\Users\\TSecret\\Desktop\\TypeScript App\\faceit-stats\\src\\App.tsx":"2","C:\\Users\\TSecret\\Desktop\\TypeScript App\\faceit-stats\\src\\pages\\Home.tsx":"3","C:\\Users\\TSecret\\Desktop\\TypeScript App\\faceit-stats\\src\\config\\index.ts":"4","C:\\Users\\TSecret\\Desktop\\TypeScript App\\faceit-stats\\src\\pages\\Match.tsx":"5","C:\\Users\\TSecret\\Desktop\\TypeScript App\\faceit-stats\\src\\api\\index.ts":"6","C:\\Users\\TSecret\\Desktop\\TypeScript App\\faceit-stats\\src\\constants\\index.ts":"7","C:\\Users\\TSecret\\Desktop\\TypeScript App\\faceit-stats\\src\\utils\\index.ts":"8"},{"size":219,"mtime":1607454693003,"results":"9","hashOfConfig":"10"},{"size":574,"mtime":1607470653113,"results":"11","hashOfConfig":"10"},{"size":943,"mtime":1607470310923,"results":"12","hashOfConfig":"10"},{"size":680,"mtime":1607470009372,"results":"13","hashOfConfig":"10"},{"size":10666,"mtime":1607600398044,"results":"14","hashOfConfig":"10"},{"size":2502,"mtime":1607526961538,"results":"15","hashOfConfig":"10"},{"size":3586,"mtime":1607529092231,"results":"16","hashOfConfig":"10"},{"size":3000,"mtime":1607600283246,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"6v1jz8",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\TSecret\\Desktop\\TypeScript App\\faceit-stats\\src\\index.tsx",[],["36","37"],"C:\\Users\\TSecret\\Desktop\\TypeScript App\\faceit-stats\\src\\App.tsx",[],"C:\\Users\\TSecret\\Desktop\\TypeScript App\\faceit-stats\\src\\pages\\Home.tsx",[],"C:\\Users\\TSecret\\Desktop\\TypeScript App\\faceit-stats\\src\\config\\index.ts",[],"C:\\Users\\TSecret\\Desktop\\TypeScript App\\faceit-stats\\src\\pages\\Match.tsx",["38","39","40","41","42","43","44","45","46"],"C:\\Users\\TSecret\\Desktop\\TypeScript App\\faceit-stats\\src\\api\\index.ts",["47"],"import Axios from \"axios\";\r\n\r\nconst axios = require('axios');\r\n\r\n\r\nexport const fetchMatch = async (id: String) => {\r\n    return await axios.get(`https://api.faceit.com/match/v2/match/${id}`)\r\n    .then((res: { data: any; }) => res.data.payload)\r\n    .catch((error: {response: any}) => { console.log(error) })\r\n}\r\n\r\nexport const fetchVoting = async (id: String, entity_type: String) => {\r\n    return await axios.get(`https://api.faceit.com/democracy/v1/match/${id}/history`)\r\n    .then((res: {data: any}) => {\r\n        let entity = res.data.payload.tickets.find((entity: { entity_type: string; }) => entity.entity_type === entity_type)\r\n        return entity.entities;\r\n    })\r\n    .catch((error: {response: any}) => {console.log(error)})\r\n}\r\n\r\nexport const getPlayerInfo = async ({nickname, id, nicknames, ids}: any) => {\r\n    if(nickname){\r\n        return await axios.get(`https://api.faceit.com/core/v1/nicknames/${nickname}`)\r\n        .then((res: { data: { payload: any; }; }) => res.data.payload)\r\n        .catch((error: any) => {console.log(error);})\r\n    } else if(id){\r\n        return await axios.get(`https://api.faceit.com/core/v1/users/${id}`)\r\n        .then((res: { data: any; }) => res.data)\r\n        .catch((error: any) => {console.log(error)})\r\n    } else if(nicknames){\r\n        let promises = nicknames.map((nickname: any) => axios.get(`https://api.faceit.com/core/v1/nicknames/${nickname}`))\r\n        return await axios.all(promises)\r\n        .then(axios.spread((...responses: any[]) => {\r\n            return responses.map(response => response.data.payload)\r\n        }))\r\n    } else if(ids){\r\n        let promises = ids.map((id: any) => axios.get(`https://api.faceit.com/core/v1/users/${id}`))\r\n        return await axios.all(promises)\r\n        .then(axios.spread((...responses: any[]) => {\r\n            return responses.map(response => response.data.payload)\r\n        }))\r\n    }\r\n}\r\n\r\nexport const getPlayerMatches = async ({id, ids}: any) => {\r\n    if(id){\r\n        return await axios.get(`https://api.faceit.com/stats/v1/stats/time/users/${id}/games/csgo`)\r\n        .then((res: { data: any; }) => res.data)\r\n        .catch((error: any) => {console.log(error);})\r\n    } else {\r\n        let promises = ids.map((id: any) => axios.get(`https://api.faceit.com/stats/v1/stats/time/users/${id}/games/csgo`))\r\n        return await axios.all(promises)\r\n        .then(axios.spread((...responses: any[]) => {\r\n            return responses.map(response => response.data)\r\n        }))\r\n    }\r\n}","C:\\Users\\TSecret\\Desktop\\TypeScript App\\faceit-stats\\src\\constants\\index.ts",[],"C:\\Users\\TSecret\\Desktop\\TypeScript App\\faceit-stats\\src\\utils\\index.ts",["48"],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":4,"column":9,"nodeType":"55","messageId":"56","endLine":4,"endColumn":15},{"ruleId":"53","severity":1,"message":"57","line":6,"column":10,"nodeType":"55","messageId":"56","endLine":6,"endColumn":15},{"ruleId":"53","severity":1,"message":"58","line":6,"column":17,"nodeType":"55","messageId":"56","endLine":6,"endColumn":23},{"ruleId":"53","severity":1,"message":"59","line":11,"column":19,"nodeType":"55","messageId":"56","endLine":11,"endColumn":22},{"ruleId":"53","severity":1,"message":"60","line":11,"column":24,"nodeType":"55","messageId":"56","endLine":11,"endColumn":27},{"ruleId":"61","severity":1,"message":"62","line":76,"column":45,"nodeType":"63","messageId":"64","endLine":81,"endColumn":22},{"ruleId":"53","severity":1,"message":"65","line":94,"column":17,"nodeType":"55","messageId":"56","endLine":94,"endColumn":23},{"ruleId":"61","severity":1,"message":"66","line":96,"column":49,"nodeType":"63","messageId":"64","endLine":100,"endColumn":14},{"ruleId":"67","severity":1,"message":"68","line":108,"column":8,"nodeType":"69","endLine":108,"endColumn":10,"suggestions":"70"},{"ruleId":"53","severity":1,"message":"71","line":1,"column":8,"nodeType":"55","messageId":"56","endLine":1,"endColumn":13},{"ruleId":"53","severity":1,"message":"72","line":19,"column":26,"nodeType":"55","messageId":"56","endLine":19,"endColumn":31},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"@typescript-eslint/no-unused-vars","'config' is defined but never used.","Identifier","unusedVar","'Input' is defined but never used.","'Button' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'j'.","ArrowFunctionExpression","unsafeRefs","'player' is assigned a value but never used.","Function declared in a loop contains unsafe references to variable(s) 'team', 'team'.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.","ArrayExpression",["75"],"'Axios' is defined but never used.","'value' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"76","fix":"77"},"Update the dependencies array to be: [init]",{"range":"78","text":"79"},[3893,3895],"[init]"]